---
import { clsx } from "clsx";
import { remToPx } from "~/lib/rem-to-px";

interface Props {
  currentPath: string;
  className?: string;
}

const { currentPath, className = "" } = Astro.props;

interface NavLink {
  title: string;
  href: string;
}

interface NavGroup {
  title: string;
  links: NavLink[];
}

const navigation: NavGroup[] = [
  {
    title: "Guides",
    links: [
      { title: "Introduction", href: "/docs" },
      { title: "Quickstart", href: "/docs/quickstart" },
    ],
  },
];
---

<nav class={className}>
  <ul role="list">
    <li class="md:hidden">
      <a
        href="#"
        class="block py-1 text-sm text-zinc-600 transition hover:text-zinc-900 dark:text-zinc-400 dark:hover:text-white"
      >
        API
      </a>
    </li>
    <li class="md:hidden">
      <a
        href="#"
        class="block py-1 text-sm text-zinc-600 transition hover:text-zinc-900 dark:text-zinc-400 dark:hover:text-white"
      >
        Documentation
      </a>
    </li>
    <li class="md:hidden">
      <a
        href="#"
        class="block py-1 text-sm text-zinc-600 transition hover:text-zinc-900 dark:text-zinc-400 dark:hover:text-white"
      >
        Support
      </a>
    </li>
    {
      navigation.map((group, groupIndex) => (
        <li class={clsx("relative mt-6", groupIndex === 0 ? "md:mt-0" : "")}>
          <h2 class="text-xs font-semibold text-zinc-900 dark:text-white">
            {group.title}
          </h2>
          <div class="relative mt-3 pl-2">
            <div class="absolute inset-y-0 left-2 w-px bg-zinc-900/10 dark:bg-white/5" />
            {(() => {
              const activePageIndex = group.links.findIndex(
                (link) => link.href === currentPath
              );
              if (activePageIndex !== -1) {
                const itemHeight = remToPx(2);
                const offset = remToPx(0.25);
                const top = offset + activePageIndex * itemHeight;
                return (
                  <div
                    class="absolute left-2 h-6 w-px bg-emerald-500"
                    style={`top: ${top}px;`}
                  />
                );
              }
            })()}
            <ul role="list" class="border-l border-transparent">
              {group.links.map((link) => (
                <li class="relative">
                  <a
                    href={link.href}
                    aria-current={
                      link.href === currentPath ? "page" : undefined
                    }
                    class={clsx(
                      "flex justify-between gap-2 py-1 pr-3 text-sm transition pl-4",
                      link.href === currentPath
                        ? "text-zinc-900 dark:text-white"
                        : "text-zinc-600 hover:text-zinc-900 dark:text-zinc-400 dark:hover:text-white"
                    )}
                  >
                    <span class="truncate">{link.title}</span>
                  </a>
                </li>
              ))}
            </ul>
          </div>
        </li>
      ))
    }
  </ul>
</nav>
